<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="297.000mm" height="210.000mm" viewBox="0.000000 0.000000 297.000000 210.000000" stroke-linejoin="round" stroke-linecap="round" fill="none" fill-rule="evenodd"><desc>3DVIA Composer Export</desc><script type="text/ecmascript"><![CDATA[
if(typeof(top) != "undefined")
{
	top.ShowPaper = ShowPaper;
}
function ShowHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity",".5");
}
function HideHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity","0");

	var toolTip = svgDocument.getElementById('ToolTip');
	if(toolTip)
		toolTip.setAttribute("visibility","hidden");
}
function ShowToolTip(evt,hotspotid,strTooltip)
{
	if(strTooltip=="")
	return;

	// change text
	var svgDocument = evt.target.ownerDocument;
	var tiptext = svgDocument.getElementById('ToolTipText');
	if( !tiptext )
	return;
	tiptext.firstChild.nodeValue = " " + strTooltip + "  " ;

	// show tooltip before, else some refresh issue

	var toolTip = svgDocument.getElementById('ToolTip');
	if(!toolTip)
	return;

	toolTip.setAttribute("visibility","visible");
	toolTip.setAttribute("opacity",".95");

	// move tooltip
	// get viewbox

	var root = svgDocument.documentElement;
	var vbox = (root.getAttribute("viewBox")).split(' ');
	var x0 = parseFloat(vbox[0]);
	var y0 = parseFloat(vbox[1]);
	var vboxW = parseFloat(vbox[2]);
	var vboxH = parseFloat(vbox[3]);

	// get default width of svg

	var strW = root.getAttribute("width");
	var svgW = parseFloat(strW);
	if(strW.indexOf('mm') != -1)
	svgW *= 3.779;

	var strH = root.getAttribute("height");
	var svgH = parseFloat(strH);
	if(strH.indexOf('mm') != -1)
	svgH *= 3.779;  	// 96 dpi  -> 96/25.4 = 3.779

	// update the viewbox / width / height if svg is embedded in html with zoom fit all
	var realx0 = x0;
	var realy0 = y0;
	var realvboxW = vboxW;
	var realvboxH = vboxH;
	var realsvgW = svgW;
	var realsvgH = svgH;

	if ((typeof(top) == "undefined") || (typeof(top.svgctl1) != "undefined")) // embedded in html
	{
		// get window size in pxl

		svgW = window.innerWidth;
		svgH = window.innerHeight;

		// calculate real viewbox

		realsvgW = svgW;
		realsvgH = svgH;
		if((svgW / svgH) > (vboxW / vboxH))
		{
			realvboxW = (vboxH * svgW) / svgH;
			realvboxH = vboxH;
			realx0 = x0 - (realvboxW - vboxW)/2 ;
		}
		else
		{
			realvboxH = (vboxW * svgH) / svgW;
			realvboxW = vboxW;
			realy0 = y0 - (realvboxH - vboxH)/2 ;
		}
	}

	// get user zoom/pan

	var newScale = root.currentScale;
	var translation = root.currentTranslate;

	// transform pxl to user unit

	var xPos = (((evt.clientX+10- translation.x)/newScale) * realvboxW)/realsvgW  + realx0 ;
	var yPos = (((evt.clientY+5- translation.y)/newScale) * realvboxH)/ realsvgH  + realy0 ;
	var scaleForWidth = ( (1 / newScale) * realvboxH) / realsvgH;

	// move tooltip

	toolTip.setAttribute("transform", "translate(" + xPos + "," + yPos + ")" );

	// resize tooltip

	var fontsize = 12;
	tiptext.setAttribute("font-size",fontsize*scaleForWidth);
	tiptext.setAttribute("y", fontsize*scaleForWidth);
	var tipBG = svgDocument.getElementById('ToolTipBG');
	var outline = tiptext.getBBox();
	if(tipBG)
	{
		tipBG.setAttribute("stroke-width", 1*scaleForWidth);
		tipBG.setAttribute("width", Number(outline.width) );
		tipBG.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
	}
	var ToolTipShadow = svgDocument.getElementById('ToolTipShadow');
	if(ToolTipShadow)
	{
		ToolTipShadow.setAttribute("width", Number(outline.width) );
		ToolTipShadow.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
		ToolTipShadow.setAttribute("x", 3*scaleForWidth);
		ToolTipShadow.setAttribute("y", 3*scaleForWidth);
	}
}
function ShowPaper()
{
  var svgDocument = getDocument();
  var paper = svgDocument.getElementById("paperID");
  if(paper)
  {
    paper.setAttribute("transform","scale(1)");
    paper.setAttribute("opacity","1");
    paper.setAttribute("visibility","visible");
  }
  var svg = svgDocument.getRootElement();
  if(svg)
  {
    svg.setAttribute("width","307.000mm");
    svg.setAttribute("height","220.000mm");
    svg.setAttribute("viewBox","-5.000000 -5.000000 307.000000 220.000000");
  }
}
]]></script><defs/><g><path style="fill:#dcdcdc;fill-rule:evenodd" d="M156.22,72.79L162.93,75.14L169.41,79.27L174.09,83.91L177.47,89.07L177.71,89.69L177.37,89.89L176.32,90.24L173.32,85.45L167.85,80.05L161.90,76.43L155.96,74.35L150.00,73.58L146.81,73.58L142.15,74.10L134.98,76.50L128.70,80.31L124.01,84.94L120.16,90.92L117.64,97.71L116.88,103.94L116.88,106.44L117.64,112.67L119.72,118.61L123.62,125.05L128.28,129.72L133.48,133.09L133.46,133.69L132.92,134.46L127.50,131.01L122.33,125.83L118.43,119.38L116.09,112.93L115.32,106.18L115.32,104.20L116.09,97.45L118.60,90.66L122.59,84.29L127.92,79.01L134.13,75.13L140.85,72.79L146.81,72.03L150.00,72.03z"/><g id="Actor_.0"><g style="stroke:#000000;stroke-width:0.353"><path d="M116.02,112.51L115.98,112.41L115.14,105.00L115.98,97.59L118.44,90.55L118.47,90.50L122.41,84.24L127.68,78.96L134.00,75.00L141.03,72.53L148.44,71.70L155.85,72.53L162.89,75.00L163.56,75.41L169.21,78.96L174.48,84.24L178.45,90.55L180.91,97.59L181.75,105.00L180.91,112.41L178.45,119.45L178.41,119.50L174.48,125.76L169.21,131.04L162.89,135.00L155.85,137.47L148.44,138.30L141.03,137.47L134.00,135.00L127.68,131.04L122.41,125.76L118.44,119.45L116.02,112.51"/></g><g style="stroke:#000000;stroke-width:0.705"><path d="M68.45,107.44L68.27,105.00L69.09,93.59L71.52,82.41L75.52,71.70L81.00,61.66L87.85,52.50L95.94,44.41L96.29,44.15L105.10,37.56L115.14,32.07L125.86,28.08L126.46,27.95L137.03,25.65L148.44,24.83L159.85,25.65L170.54,27.97L171.03,28.08L181.75,32.07L191.79,37.56L200.94,44.41L202.94,46.41L209.03,52.50L215.89,61.66L221.37,71.70L225.37,82.41L227.80,93.59L228.61,105.00L227.80,116.41L225.37,127.59L221.37,138.30L215.89,148.34L209.03,157.50L204.10,162.43L200.94,165.59L191.79,172.44L181.75,177.93L171.03,181.92L170.54,182.03L159.85,184.35L148.44,185.17L137.03,184.35L125.86,181.92L123.37,180.99L115.14,177.93L105.10,172.44L95.94,165.59L87.85,157.50L81.00,148.34L75.52,138.30L71.52,127.59L69.09,116.41L68.45,107.44"/><path d="M117.15,109.06L116.69,105.00L117.49,97.93L119.83,91.22L123.62,85.20L128.65,80.17L134.37,76.57L134.67,76.39L141.38,74.04L148.45,73.24L155.51,74.04L162.22,76.39L164.37,77.73L168.25,80.17L173.27,85.20L177.06,91.22L179.41,97.93L180.20,105.00L179.41,112.07L177.06,118.78L176.60,119.50L173.27,124.80L168.25,129.83L162.22,133.61L155.51,135.96L148.45,136.76L141.38,135.96L134.67,133.61L128.65,129.83L123.62,124.80L119.83,118.78L117.49,112.07L117.15,109.06"/></g></g><g><g/></g><g/><g id="paperID" visibility="hidden" opacity="0.00" transform="scale(0.000100)"><path style="stroke:#000000;stroke-width:0.500;fill:#e6e6e6;fill-rule:evenodd" d="M-2000.00,-2000.00L2297.00,-2000.00L2297.00,2210.00L-2000.00,2210.00zM0.00,0.00L297.00,0.00L297.00,210.00L0.00,210.00z"/><path style="fill:#000000;fill-opacity:0.118" d="M3.00,210.00L297.00,210.00L297.00,3.00L300.00,3.00L300.00,213.00L3.00,213.00z"/></g><g id="ToolTip" visibility="hidden" opacity="0" transform="translate(0,0)"><rect id="ToolTipShadow" opacity="0.20" fill="black" stroke="none" x="0" y="0" width="30" height="8"/><rect id="ToolTipBG" fill="#ffffe1" stroke="black" x="0" y="0" width="30" height="8"/><text xml:space="preserve" id="ToolTipText" fill="black" x="0" y="0" width="30" height="8">tooltip</text></g></g></svg>
