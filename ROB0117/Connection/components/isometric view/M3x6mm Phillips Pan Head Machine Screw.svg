<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="297.000mm" height="210.000mm" viewBox="0.000000 0.000000 297.000000 210.000000" stroke-linejoin="round" stroke-linecap="round" fill="none" fill-rule="evenodd"><desc>3DVIA Composer Export</desc><script type="text/ecmascript"><![CDATA[
if(typeof(top) != "undefined")
{
	top.ShowPaper = ShowPaper;
}
function ShowHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity",".5");
}
function HideHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity","0");

	var toolTip = svgDocument.getElementById('ToolTip');
	if(toolTip)
		toolTip.setAttribute("visibility","hidden");
}
function ShowToolTip(evt,hotspotid,strTooltip)
{
	if(strTooltip=="")
	return;

	// change text
	var svgDocument = evt.target.ownerDocument;
	var tiptext = svgDocument.getElementById('ToolTipText');
	if( !tiptext )
	return;
	tiptext.firstChild.nodeValue = " " + strTooltip + "  " ;

	// show tooltip before, else some refresh issue

	var toolTip = svgDocument.getElementById('ToolTip');
	if(!toolTip)
	return;

	toolTip.setAttribute("visibility","visible");
	toolTip.setAttribute("opacity",".95");

	// move tooltip
	// get viewbox

	var root = svgDocument.documentElement;
	var vbox = (root.getAttribute("viewBox")).split(' ');
	var x0 = parseFloat(vbox[0]);
	var y0 = parseFloat(vbox[1]);
	var vboxW = parseFloat(vbox[2]);
	var vboxH = parseFloat(vbox[3]);

	// get default width of svg

	var strW = root.getAttribute("width");
	var svgW = parseFloat(strW);
	if(strW.indexOf('mm') != -1)
	svgW *= 3.779;

	var strH = root.getAttribute("height");
	var svgH = parseFloat(strH);
	if(strH.indexOf('mm') != -1)
	svgH *= 3.779;  	// 96 dpi  -> 96/25.4 = 3.779

	// update the viewbox / width / height if svg is embedded in html with zoom fit all
	var realx0 = x0;
	var realy0 = y0;
	var realvboxW = vboxW;
	var realvboxH = vboxH;
	var realsvgW = svgW;
	var realsvgH = svgH;

	if ((typeof(top) == "undefined") || (typeof(top.svgctl1) != "undefined")) // embedded in html
	{
		// get window size in pxl

		svgW = window.innerWidth;
		svgH = window.innerHeight;

		// calculate real viewbox

		realsvgW = svgW;
		realsvgH = svgH;
		if((svgW / svgH) > (vboxW / vboxH))
		{
			realvboxW = (vboxH * svgW) / svgH;
			realvboxH = vboxH;
			realx0 = x0 - (realvboxW - vboxW)/2 ;
		}
		else
		{
			realvboxH = (vboxW * svgH) / svgW;
			realvboxW = vboxW;
			realy0 = y0 - (realvboxH - vboxH)/2 ;
		}
	}

	// get user zoom/pan

	var newScale = root.currentScale;
	var translation = root.currentTranslate;

	// transform pxl to user unit

	var xPos = (((evt.clientX+10- translation.x)/newScale) * realvboxW)/realsvgW  + realx0 ;
	var yPos = (((evt.clientY+5- translation.y)/newScale) * realvboxH)/ realsvgH  + realy0 ;
	var scaleForWidth = ( (1 / newScale) * realvboxH) / realsvgH;

	// move tooltip

	toolTip.setAttribute("transform", "translate(" + xPos + "," + yPos + ")" );

	// resize tooltip

	var fontsize = 12;
	tiptext.setAttribute("font-size",fontsize*scaleForWidth);
	tiptext.setAttribute("y", fontsize*scaleForWidth);
	var tipBG = svgDocument.getElementById('ToolTipBG');
	var outline = tiptext.getBBox();
	if(tipBG)
	{
		tipBG.setAttribute("stroke-width", 1*scaleForWidth);
		tipBG.setAttribute("width", Number(outline.width) );
		tipBG.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
	}
	var ToolTipShadow = svgDocument.getElementById('ToolTipShadow');
	if(ToolTipShadow)
	{
		ToolTipShadow.setAttribute("width", Number(outline.width) );
		ToolTipShadow.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
		ToolTipShadow.setAttribute("x", 3*scaleForWidth);
		ToolTipShadow.setAttribute("y", 3*scaleForWidth);
	}
}
function ShowPaper()
{
  var svgDocument = getDocument();
  var paper = svgDocument.getElementById("paperID");
  if(paper)
  {
    paper.setAttribute("transform","scale(1)");
    paper.setAttribute("opacity","1");
    paper.setAttribute("visibility","visible");
  }
  var svg = svgDocument.getRootElement();
  if(svg)
  {
    svg.setAttribute("width","307.000mm");
    svg.setAttribute("height","220.000mm");
    svg.setAttribute("viewBox","-5.000000 -5.000000 307.000000 220.000000");
  }
}
]]></script><defs/><g><path style="fill:#dcdcdc;fill-rule:evenodd" d="M213.19,80.83L213.19,88.84L210.95,95.03L210.21,96.02L206.65,99.64L157.15,133.83L157.46,134.82L159.93,151.43L159.92,154.48L157.46,166.37L156.96,167.36L151.28,173.08L150.02,174.05L138.56,177.20L135.82,177.43L126.66,177.68L120.54,177.69L105.92,173.97L101.62,172.23L102.96,172.24L106.08,172.73L109.40,170.09L109.66,169.60L110.63,164.14L110.37,161.31L110.30,160.85L114.24,159.32L138.40,143.35L143.23,138.77L154.00,125.99L152.25,121.21L147.92,110.79L210.65,73.36L210.93,73.39zM91.79,129.15L97.29,141.02L97.30,141.61L84.14,149.52L83.32,149.78L73.46,128.89L73.47,127.97L76.46,117.30L76.95,117.21z"/><g id="Actor_.0"><g style="stroke:#000000;stroke-width:0.353"><path d="M66.68,115.32L67.78,109.33L71.24,106.44L76.93,107.40L81.64,110.30L89.68,118.02L97.74,128.90L104.55,141.35L109.06,153.42L110.72,163.34L109.52,169.91L105.91,172.66L100.56,171.69"/><path d="M97.47,141.41L83.38,149.82L73.32,128.27L83.92,122.71"/><path d="M73.32,128.27L76.52,116.78"/><path d="M83.38,149.82L97.66,162.87"/><path d="M206.51,99.67L206.53,99.66"/></g><g style="stroke:#000000;stroke-width:0.705"><path d="M67.29,119.83L66.68,115.32L67.88,104.80L74.82,88.48L79.20,79.97L90.86,68.38L91.72,67.92L101.25,66.74L102.51,66.96L111.42,70.30L120.72,76.53L134.46,90.46L135.95,92.33L146.74,109.06L147.89,110.84L149.03,113.05L156.88,132.76L157.47,134.89L160.04,152.19L160.03,153.89L157.50,166.25L156.96,167.30L150.47,173.72L149.58,174.10L137.64,177.28L121.13,177.72L105.99,173.90L100.56,171.69L94.20,167.51L92.11,165.64L85.42,158.27L79.12,149.31L73.70,139.51L69.59,129.64L67.79,123.51L67.29,119.83"/><path d="M76.52,116.78L91.96,129.15L103.09,153.90L97.66,162.87"/><path d="M127.60,83.51L180.84,58.16L186.56,56.08L193.23,56.59L200.08,59.79L206.23,65.43L210.82,72.79L213.22,80.91L213.18,88.70L210.81,95.18L206.53,99.66L157.14,133.69"/></g></g><g/><g><g/></g><g id="paperID" visibility="hidden" opacity="0.00" transform="scale(0.000100)"><path style="stroke:#000000;stroke-width:0.500;fill:#e6e6e6;fill-rule:evenodd" d="M-2000.00,-2000.00L2297.00,-2000.00L2297.00,2210.00L-2000.00,2210.00zM0.00,0.00L297.00,0.00L297.00,210.00L0.00,210.00z"/><path style="fill:#000000;fill-opacity:0.118" d="M3.00,210.00L297.00,210.00L297.00,3.00L300.00,3.00L300.00,213.00L3.00,213.00z"/></g><g id="ToolTip" visibility="hidden" opacity="0" transform="translate(0,0)"><rect id="ToolTipShadow" opacity="0.20" fill="black" stroke="none" x="0" y="0" width="30" height="8"/><rect id="ToolTipBG" fill="#ffffe1" stroke="black" x="0" y="0" width="30" height="8"/><text xml:space="preserve" id="ToolTipText" fill="black" x="0" y="0" width="30" height="8">tooltip</text></g></g></svg>
