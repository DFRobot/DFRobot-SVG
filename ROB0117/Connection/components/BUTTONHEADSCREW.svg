<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="297.000mm" height="210.000mm" viewBox="0.000000 0.000000 297.000000 210.000000" stroke-linejoin="round" stroke-linecap="round" fill="none" fill-rule="evenodd"><desc>3DVIA Composer Export</desc><script type="text/ecmascript"><![CDATA[
if(typeof(top) != "undefined")
{
	top.ShowPaper = ShowPaper;
}
function ShowHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity",".5");
}
function HideHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity","0");

	var toolTip = svgDocument.getElementById('ToolTip');
	if(toolTip)
		toolTip.setAttribute("visibility","hidden");
}
function ShowToolTip(evt,hotspotid,strTooltip)
{
	if(strTooltip=="")
	return;

	// change text
	var svgDocument = evt.target.ownerDocument;
	var tiptext = svgDocument.getElementById('ToolTipText');
	if( !tiptext )
	return;
	tiptext.firstChild.nodeValue = " " + strTooltip + "  " ;

	// show tooltip before, else some refresh issue

	var toolTip = svgDocument.getElementById('ToolTip');
	if(!toolTip)
	return;

	toolTip.setAttribute("visibility","visible");
	toolTip.setAttribute("opacity",".95");

	// move tooltip
	// get viewbox

	var root = svgDocument.documentElement;
	var vbox = (root.getAttribute("viewBox")).split(' ');
	var x0 = parseFloat(vbox[0]);
	var y0 = parseFloat(vbox[1]);
	var vboxW = parseFloat(vbox[2]);
	var vboxH = parseFloat(vbox[3]);

	// get default width of svg

	var strW = root.getAttribute("width");
	var svgW = parseFloat(strW);
	if(strW.indexOf('mm') != -1)
	svgW *= 3.779;

	var strH = root.getAttribute("height");
	var svgH = parseFloat(strH);
	if(strH.indexOf('mm') != -1)
	svgH *= 3.779;  	// 96 dpi  -> 96/25.4 = 3.779

	// update the viewbox / width / height if svg is embedded in html with zoom fit all
	var realx0 = x0;
	var realy0 = y0;
	var realvboxW = vboxW;
	var realvboxH = vboxH;
	var realsvgW = svgW;
	var realsvgH = svgH;

	if ((typeof(top) == "undefined") || (typeof(top.svgctl1) != "undefined")) // embedded in html
	{
		// get window size in pxl

		svgW = window.innerWidth;
		svgH = window.innerHeight;

		// calculate real viewbox

		realsvgW = svgW;
		realsvgH = svgH;
		if((svgW / svgH) > (vboxW / vboxH))
		{
			realvboxW = (vboxH * svgW) / svgH;
			realvboxH = vboxH;
			realx0 = x0 - (realvboxW - vboxW)/2 ;
		}
		else
		{
			realvboxH = (vboxW * svgH) / svgW;
			realvboxW = vboxW;
			realy0 = y0 - (realvboxH - vboxH)/2 ;
		}
	}

	// get user zoom/pan

	var newScale = root.currentScale;
	var translation = root.currentTranslate;

	// transform pxl to user unit

	var xPos = (((evt.clientX+10- translation.x)/newScale) * realvboxW)/realsvgW  + realx0 ;
	var yPos = (((evt.clientY+5- translation.y)/newScale) * realvboxH)/ realsvgH  + realy0 ;
	var scaleForWidth = ( (1 / newScale) * realvboxH) / realsvgH;

	// move tooltip

	toolTip.setAttribute("transform", "translate(" + xPos + "," + yPos + ")" );

	// resize tooltip

	var fontsize = 12;
	tiptext.setAttribute("font-size",fontsize*scaleForWidth);
	tiptext.setAttribute("y", fontsize*scaleForWidth);
	var tipBG = svgDocument.getElementById('ToolTipBG');
	var outline = tiptext.getBBox();
	if(tipBG)
	{
		tipBG.setAttribute("stroke-width", 1*scaleForWidth);
		tipBG.setAttribute("width", Number(outline.width) );
		tipBG.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
	}
	var ToolTipShadow = svgDocument.getElementById('ToolTipShadow');
	if(ToolTipShadow)
	{
		ToolTipShadow.setAttribute("width", Number(outline.width) );
		ToolTipShadow.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
		ToolTipShadow.setAttribute("x", 3*scaleForWidth);
		ToolTipShadow.setAttribute("y", 3*scaleForWidth);
	}
}
function ShowPaper()
{
  var svgDocument = getDocument();
  var paper = svgDocument.getElementById("paperID");
  if(paper)
  {
    paper.setAttribute("transform","scale(1)");
    paper.setAttribute("opacity","1");
    paper.setAttribute("visibility","visible");
  }
  var svg = svgDocument.getRootElement();
  if(svg)
  {
    svg.setAttribute("width","307.000mm");
    svg.setAttribute("height","220.000mm");
    svg.setAttribute("viewBox","-5.000000 -5.000000 307.000000 220.000000");
  }
}
]]></script><defs/><g><path style="stroke:#ff0000;stroke-width:1.000;stroke-opacity:0.00" d="M63.88,44.24L231.13,44.24L231.13,162.04L63.88,162.04L63.88,44.24"/><path style="fill:#ffffff" d="M231.05,161.71L63.94,161.71L63.94,44.06L231.05,44.06z"/><path style="fill:#dcdcdc" d="M107.26,51.05L109.26,54.76L111.50,63.71L113.26,76.71L106.20,76.88L104.78,79.68L103.72,84.33L102.72,92.53L102.23,103.97L102.55,114.40L102.96,119.22L228.58,119.38L227.82,123.93L225.50,130.06L223.00,133.04L113.41,133.29L111.50,146.54L109.01,155.74L107.26,158.95L105.68,159.88L104.78,159.90L93.35,154.92L90.64,153.16L78.43,142.69L78.38,142.45L78.67,142.45L82.44,145.21L83.41,145.48L90.63,146.72L91.53,146.72L99.33,145.48L98.83,142.49L97.09,126.58L96.59,112.17L96.59,96.59L97.34,80.19L99.56,63.03L102.30,53.34L103.20,52.00L105.46,50.00L105.78,50.01z"/><g id="Actor_.0"><g style="stroke:#000000;stroke-width:0.353"><path d="M104.97,160.01L102.09,156.19L101.77,155.38L99.15,144.79L98.89,143.24L97.06,126.55L96.92,124.42L96.33,104.19L96.35,101.86L97.17,81.98L97.33,79.93L99.34,64.16L99.61,62.72L102.31,53.30L102.63,52.62L105.51,49.90"/><path d="M106.25,133.24L104.74,130.26L103.44,124.09L102.55,115.29L102.24,105.00L102.55,94.71L103.44,85.91L104.74,79.73L106.25,76.75"/></g><g style="stroke:#000000;stroke-width:0.705"><path d="M113.29,133.24L113.07,135.63L111.50,146.41L111.29,147.48L109.15,155.43L107.41,158.84L105.29,160.08L104.97,160.01L94.00,155.30L91.02,153.45L76.64,141.11L72.22,134.73L69.40,129.25L67.26,120.35L66.19,109.11L66.39,97.22L67.83,86.55L70.23,78.63L71.41,76.91L76.64,68.89L91.02,56.54L94.00,54.69L105.51,49.90L107.41,51.16L109.24,54.81L109.50,55.55L111.57,63.96L111.77,65.08L113.26,76.15L113.32,76.75"/><path d="M106.25,133.24L222.80,133.24L225.47,130.26L227.75,124.09L229.30,115.29L229.85,105.00L229.30,94.71L227.75,85.91L225.47,79.73L222.80,76.75L106.25,76.75"/></g></g><g><g/></g><g/><g/><g id="ToolTip" visibility="hidden" opacity="0" transform="translate(0,0)"><rect id="ToolTipShadow" opacity="0.20" fill="black" stroke="none" x="0" y="0" width="30" height="8"/><rect id="ToolTipBG" fill="#ffffe1" stroke="black" x="0" y="0" width="30" height="8"/><text xml:space="preserve" id="ToolTipText" fill="black" x="0" y="0" width="30" height="8">tooltip</text></g></g></svg>
